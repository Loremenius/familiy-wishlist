{"ast":null,"code":"import axios from \"axios\";\nexport const LOGIN_USER_LOADING = \"LOGIN_USER_LOADING\";\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_FAILED = \"LOGIN_USER_FAILED\";\nexport const REGISTER_USER_LOADING = \"REGISTER_USER_LOADING\";\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAILED = \"REGISTER_USER_FAILED\";\nexport const SET_ERROR = '';\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const logoutClear = () => ({\n  type: LOGOUT_USER\n});\nexport const loginUserLoading = () => ({\n  type: LOGIN_USER_LOADING\n});\nexport const loginUserSuccess = data => ({\n  type: LOGIN_USER_SUCCESS,\n  payload: data\n});\nexport const loginUserFailure = error => ({\n  type: LOGIN_USER_FAILED,\n  payload: error\n});\nexport const registerUserLoading = () => ({\n  type: REGISTER_USER_LOADING\n});\nexport const registerUserSuccess = () => ({\n  type: REGISTER_USER_SUCCESS\n});\nexport const registerUserFailure = error => ({\n  type: REGISTER_USER_FAILED,\n  payload: error\n});\nexport const setReduxError = error => ({\n  type: SET_ERROR,\n  payload: error\n});\nexport function loginUser(user, history) {\n  return function (dispatch) {\n    dispatch(loginUserLoading());\n    return axios.post('http://localhost:4000/api/user/login', user).then(response => {\n      dispatch(loginUserSuccess(response.data));\n      sessionStorage.setItem(\"token\", response.data.token);\n      history.push('/home');\n    }).catch(error => {\n      console.log(error);\n      dispatch(loginUserFailure(error.response.data.message));\n    });\n  };\n}\nexport function logoutUser() {\n  return function (dispatch) {\n    sessionStorage.clear();\n    localStorage.clear();\n    dispatch(logoutClearLogin());\n  };\n}\nexport function registerUser(user, history) {\n  return function (dispatch) {\n    dispatch(registerUserLoading());\n    return axios.post('http://localhost:4000/api/user/register', user).then(() => {\n      dispatch(registerUserSuccess());\n      history.push('/login');\n    }).catch(error => {\n      console.log(error);\n      dispatch(registerUserFailure(error.response.data.message));\n    });\n  };\n}\nexport function setError(error) {\n  return function (dispatch) {\n    dispatch(setReduxError(error));\n  };\n}","map":{"version":3,"sources":["/Users/loremenius/Documents/Git/familiy-wishlist/src/redux/actions/LoginRegisterActions.js"],"names":["axios","LOGIN_USER_LOADING","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER_LOADING","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","SET_ERROR","LOGOUT_USER","logoutClear","type","loginUserLoading","loginUserSuccess","data","payload","loginUserFailure","error","registerUserLoading","registerUserSuccess","registerUserFailure","setReduxError","loginUser","user","history","dispatch","post","then","response","sessionStorage","setItem","token","push","catch","console","log","message","logoutUser","clear","localStorage","logoutClearLogin","registerUser","setError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,SAAS,GAAG,EAAlB;AAEP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,WAAW,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEF;AAAR,CAAP,CAApB;AAEP,OAAO,MAAMG,gBAAgB,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAET;AAAR,CAAP,CAAzB;AACP,OAAO,MAAMW,gBAAgB,GAAGC,IAAI,KAAK;AACrCH,EAAAA,IAAI,EAAER,kBAD+B;AAErCY,EAAAA,OAAO,EAAED;AAF4B,CAAL,CAA7B;AAIP,OAAO,MAAME,gBAAgB,GAAGC,KAAK,KAAK;AACtCN,EAAAA,IAAI,EAAEP,iBADgC;AAEtCW,EAAAA,OAAO,EAAEE;AAF6B,CAAL,CAA9B;AAKP,OAAO,MAAMC,mBAAmB,GAAG,OAAO;AAAEP,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAA5B;AACP,OAAO,MAAMc,mBAAmB,GAAG,OAAO;AAAER,EAAAA,IAAI,EAAEL;AAAR,CAAP,CAA5B;AACP,OAAO,MAAMc,mBAAmB,GAAGH,KAAK,KAAK;AACzCN,EAAAA,IAAI,EAAEJ,oBADmC;AAEzCQ,EAAAA,OAAO,EAAEE;AAFgC,CAAL,CAAjC;AAKP,OAAO,MAAMI,aAAa,GAAGJ,KAAK,KAAK;AACnCN,EAAAA,IAAI,EAAEH,SAD6B;AAEnCO,EAAAA,OAAO,EAAEE;AAF0B,CAAL,CAA3B;AAKP,OAAO,SAASK,SAAT,CAAmBC,IAAnB,EAAwBC,OAAxB,EAAgC;AACnC,SAAO,UAASC,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAACb,gBAAgB,EAAjB,CAAR;AACA,WAAOX,KAAK,CAACyB,IAAN,CAAW,sCAAX,EAAkDH,IAAlD,EACFI,IADE,CACGC,QAAQ,IAAE;AACZH,MAAAA,QAAQ,CAACZ,gBAAgB,CAACe,QAAQ,CAACd,IAAV,CAAjB,CAAR;AACAe,MAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAA+BF,QAAQ,CAACd,IAAT,CAAciB,KAA7C;AACAP,MAAAA,OAAO,CAACQ,IAAR,CAAa,OAAb;AACH,KALE,EAMFC,KANE,CAMIhB,KAAK,IAAE;AACViB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACAQ,MAAAA,QAAQ,CAACT,gBAAgB,CAAEC,KAAK,CAACW,QAAN,CAAed,IAAf,CAAoBsB,OAAtB,CAAjB,CAAR;AACH,KATE,CAAP;AAUH,GAZD;AAaH;AAED,OAAO,SAASC,UAAT,GAAqB;AACxB,SAAO,UAASZ,QAAT,EAAmB;AACtBI,IAAAA,cAAc,CAACS,KAAf;AACAC,IAAAA,YAAY,CAACD,KAAb;AACAb,IAAAA,QAAQ,CAACe,gBAAgB,EAAjB,CAAR;AAEH,GALD;AAMH;AAED,OAAO,SAASC,YAAT,CAAsBlB,IAAtB,EAA4BC,OAA5B,EAAoC;AACvC,SAAO,UAASC,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAACP,mBAAmB,EAApB,CAAR;AACA,WAAOjB,KAAK,CAACyB,IAAN,CAAW,yCAAX,EAAqDH,IAArD,EACFI,IADE,CACG,MAAI;AACNF,MAAAA,QAAQ,CAACN,mBAAmB,EAApB,CAAR;AACAK,MAAAA,OAAO,CAACQ,IAAR,CAAa,QAAb;AACH,KAJE,EAKFC,KALE,CAKIhB,KAAK,IAAE;AACViB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACAQ,MAAAA,QAAQ,CAACL,mBAAmB,CAAEH,KAAK,CAACW,QAAN,CAAed,IAAf,CAAoBsB,OAAtB,CAApB,CAAR;AACH,KARE,CAAP;AASH,GAXD;AAYH;AAED,OAAO,SAASM,QAAT,CAAkBzB,KAAlB,EAAwB;AAC3B,SAAO,UAASQ,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAACJ,aAAa,CAACJ,KAAD,CAAd,CAAR;AACH,GAFD;AAGH","sourcesContent":["import axios from \"axios\";\n\nexport const LOGIN_USER_LOADING = \"LOGIN_USER_LOADING\";\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_FAILED = \"LOGIN_USER_FAILED\";\n\nexport const REGISTER_USER_LOADING = \"REGISTER_USER_LOADING\";\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAILED = \"REGISTER_USER_FAILED\";\n\nexport const SET_ERROR = '';\n\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n\nexport const logoutClear = () => ({ type: LOGOUT_USER });\n\nexport const loginUserLoading = () => ({ type: LOGIN_USER_LOADING });\nexport const loginUserSuccess = data => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: data\n  });\nexport const loginUserFailure = error => ({\n    type: LOGIN_USER_FAILED,\n    payload: error\n});\n\nexport const registerUserLoading = () => ({ type: REGISTER_USER_LOADING });\nexport const registerUserSuccess = () => ({ type: REGISTER_USER_SUCCESS });\nexport const registerUserFailure = error => ({\n    type: REGISTER_USER_FAILED,\n    payload: error\n});\n\nexport const setReduxError = error => ({\n    type: SET_ERROR,\n    payload: error\n});\n\nexport function loginUser(user,history){\n    return function(dispatch) {\n        dispatch(loginUserLoading());\n        return axios.post('http://localhost:4000/api/user/login',user)\n            .then(response=>{\n                dispatch(loginUserSuccess(response.data));\n                sessionStorage.setItem(\"token\",response.data.token);\n                history.push('/home')\n            })\n            .catch(error=>{\n                console.log(error);\n                dispatch(loginUserFailure( error.response.data.message)); \n            })\n    }\n}\n\nexport function logoutUser(){\n    return function(dispatch) {\n        sessionStorage.clear();\n        localStorage.clear()\n        dispatch(logoutClearLogin());\n\n    }\n}\n\nexport function registerUser(user, history){\n    return function(dispatch) {\n        dispatch(registerUserLoading());\n        return axios.post('http://localhost:4000/api/user/register',user)\n            .then(()=>{\n                dispatch(registerUserSuccess());\n                history.push('/login')\n            })\n            .catch(error=>{\n                console.log(error);\n                dispatch(registerUserFailure( error.response.data.message)); \n            })\n    }\n}\n\nexport function setError(error){\n    return function(dispatch) {\n        dispatch(setReduxError(error));\n    }\n}"]},"metadata":{},"sourceType":"module"}