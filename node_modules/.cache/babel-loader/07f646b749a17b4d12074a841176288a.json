{"ast":null,"code":"import _defineProperty from \"/Users/loremenius/Documents/Git/familiy-wishlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/loremenius/Documents/Git/familiy-wishlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/loremenius/Documents/Git/familiy-wishlist/src/components/Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { registerUser, setError } from '../redux/actions/LoginRegisterActions';\nimport fixNameCasing from '../redux/reducers/functions/fixNameCasing';\n\nconst Login = ({\n  registerUser,\n  history,\n  error,\n  setError\n}) => {\n  //sets authorization password to variable passed by environment. Otherwise uses string as password.\n  const authorization = process.env.REACT_APP_AUTH_PASSWORD || '#vZ]PjqG)(G)KPklX';\n\n  const _useState = useState({\n    username: \"\",\n    password: \"\",\n    firstname: '',\n    lastname: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        auth = _useState4[0],\n        setAuth = _useState4[1];\n\n  const onChange = e => {\n    // if the name of the target is auth: change auth value\n    if (e.target.name === 'auth') setAuth(e.target.value); // otherwise set value on user object\n    else {\n        setUser(_objectSpread({}, user, {\n          [e.target.name]: e.target.value\n        }));\n      }\n  };\n\n  const displayError = () => {\n    // if the error is not an empty string: create a paragraph to disaply it.\n    if (!!error) return React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, error); // if error is a empty string: create empty paragraph.\n    else return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // set error to empty string\n\n    setError(''); // check to make sure all fields are filled out\n\n    if (!!user.username && !!user.password && !!user.firstname && !!user.lastname && !!auth) {\n      // check to see if password passed by user is the same as the authorization password\n      if (auth == authorization) {\n        // if password is correct. call action to send data to back-end.\n        // send firstname and last name to fixNameCasing function to convert them to correct casing. (Returns object)\n        const name = fixNameCasing(user.firstname, user.lastname); // create new object merging user and name together\n\n        const data = _objectSpread({}, user, {}, name); // call action to send data to back-end.\n\n\n        registerUser(data, history); // if the password is incorrect. change error to display it.\n      } else {\n        setError('Authorization is incorrect');\n      } // if not all fields are filled out. change error to display it. \n\n    } else {\n      setError('All fields are required');\n    }\n  };\n\n  useEffect(() => {\n    setError('');\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Register a New User\"), React.createElement(\"form\", {\n    className: \"registerForm\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Username: \"), React.createElement(\"input\", {\n    type: \"text\",\n    value: user.username,\n    name: \"username\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Passwword: \"), React.createElement(\"input\", {\n    type: \"password\",\n    value: user.password,\n    name: \"password\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"First name: \"), React.createElement(\"input\", {\n    type: \"text\",\n    value: user.firstname,\n    name: \"firstname\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Last name: \"), React.createElement(\"input\", {\n    type: \"text\",\n    value: user.lastname,\n    name: \"lastname\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Authorization: \"), React.createElement(\"input\", {\n    type: \"password\",\n    value: auth,\n    name: \"auth\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"note\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Note: This password is required to allow you to create a new user.\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \" Register new user \"), displayError()), React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Login\"));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.loginReducer.isFetching,\n    error: state.loginReducer.error\n  };\n}\n\nexport default connect(mapStateToProps, {\n  registerUser,\n  setError\n})(Login);","map":{"version":3,"sources":["/Users/loremenius/Documents/Git/familiy-wishlist/src/components/Register.js"],"names":["React","useState","useEffect","Link","connect","registerUser","setError","fixNameCasing","Login","history","error","authorization","process","env","REACT_APP_AUTH_PASSWORD","username","password","firstname","lastname","user","setUser","auth","setAuth","onChange","e","target","name","value","displayError","onSubmit","preventDefault","data","mapStateToProps","state","isFetching","loginReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { registerUser, setError } from '../redux/actions/LoginRegisterActions';\nimport fixNameCasing from '../redux/reducers/functions/fixNameCasing';\n\nconst Login = ({ registerUser, history, error, setError }) =>{\n    //sets authorization password to variable passed by environment. Otherwise uses string as password.\n    const authorization = process.env.REACT_APP_AUTH_PASSWORD || '#vZ]PjqG)(G)KPklX';\n\n    const [user, setUser] = useState({ username:\"\", password:\"\", firstname:'', lastname:'' });\n\n    const [auth, setAuth] = useState('');\n\n    const onChange = (e) =>{\n        // if the name of the target is auth: change auth value\n        if(e.target.name === 'auth') setAuth(e.target.value);\n        // otherwise set value on user object\n        else {\n            setUser({\n                ...user,\n                [e.target.name]:e.target.value\n            })\n        }\n    }\n\n    const displayError = () =>{\n        // if the error is not an empty string: create a paragraph to disaply it.\n        if(!!error) return (<p className='error'>{error}</p>)\n        // if error is a empty string: create empty paragraph.\n        else return (<p></p>)\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault();\n        // set error to empty string\n        setError('');\n        // check to make sure all fields are filled out\n        if(!!user.username && !!user.password &&  !!user.firstname && !!user.lastname && !!auth){\n            // check to see if password passed by user is the same as the authorization password\n            if(auth == authorization){\n                // if password is correct. call action to send data to back-end.\n\n                // send firstname and last name to fixNameCasing function to convert them to correct casing. (Returns object)\n                const name = fixNameCasing(user.firstname, user.lastname);\n                // create new object merging user and name together\n                const data = { ...user, ...name }\n                // call action to send data to back-end.\n                registerUser(data, history);\n            \n            // if the password is incorrect. change error to display it.\n            } else {\n                setError('Authorization is incorrect');\n            }\n\n        // if not all fields are filled out. change error to display it. \n        }else{\n            setError('All fields are required');\n        }\n    }\n\n    useEffect(()=>{\n        setError('');\n    },[]);\n\n    return (\n\n        <div className = \"register\">\n            <h2>Register a New User</h2>\n            <form className = \"registerForm\" onSubmit={onSubmit}>\n                <label>\n                    <p>Username: </p>\n                    <input \n                        type=\"text\" \n                        value = {user.username} \n                        name=\"username\" \n                        onChange={onChange}\n                    />\n                </label>\n                <label>\n                    <p>Passwword: </p>\n                    <input \n                        type=\"password\"\n                        value={user.password} \n                        name = \"password\" \n                        onChange={onChange}\n                    />\n                </label>\n                <label>\n                    <p>First name: </p>\n                    <input \n                        type=\"text\"\n                        value={user.firstname} \n                        name = \"firstname\" \n                        onChange={onChange}\n                    />\n                </label>\n                <label>\n                    <p>Last name: </p>\n                    <input \n                        type=\"text\"\n                        value={user.lastname} \n                        name = \"lastname\" \n                        onChange={onChange}\n                    />\n                </label>\n                <label>\n                    <p>Authorization: </p>\n                    <input \n                        type=\"password\"\n                        value={auth} \n                        name = \"auth\" \n                        onChange={onChange}\n                    />\n                </label>\n                <p className='note' >Note: This password is required to allow you to create a new user.</p>\n                <button> Register new user </button>\n                {displayError()}\n            </form>\n            <Link to='/login'>Login</Link>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n      isFetching: state.loginReducer.isFetching,\n      error: state.loginReducer.error\n    };\n  }\n\nexport default connect(mapStateToProps, { registerUser, setError })(Login);"]},"metadata":{},"sourceType":"module"}