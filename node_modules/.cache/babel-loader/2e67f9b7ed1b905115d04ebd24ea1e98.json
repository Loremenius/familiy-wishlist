{"ast":null,"code":"import _defineProperty from \"/Users/loremenius/Documents/Git/familiy-wishlist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOGIN_USER_LOADING, LOGIN_USER_FAILED, LOGIN_USER_SUCCESS } from \"../actions/LoginRegisterActions\";\nimport { LOGOUT_USER } from \"../actions/LogoutAction\";\nimport { SEND_LINK_TOKEN_SUCCESS } from \"../actions/PlaidActions\";\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_USER_LOADING:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: null\n      });\n\n    case LOGIN_USER_FAILED:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.payload\n      });\n\n    case LOGIN_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        user: action.payload,\n        isFetching: false,\n        error: null,\n        navState: \"I am in show logout but\"\n      });\n\n    case SEND_LINK_TOKEN_SUCCESS:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          LinkedAccount: true\n        })\n      });\n\n    case LOGOUT_USER:\n      return {\n        user: {\n          id: null,\n          token: \"\",\n          message: \"\",\n          LinkedAccount: false\n        },\n        error: null,\n        isFetching: false,\n        navState: \"\"\n      };\n\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  user: {},\n  error: null,\n  isFetching: false\n};","map":{"version":3,"sources":["/Users/loremenius/Documents/Git/familiy-wishlist/src/redux/reducers/LoginRegisterReducer.js"],"names":["LOGIN_USER_LOADING","LOGIN_USER_FAILED","LOGIN_USER_SUCCESS","LOGOUT_USER","SEND_LINK_TOKEN_SUCCESS","reducer","state","initialState","action","type","isFetching","error","payload","user","navState","LinkedAccount","id","token","message"],"mappings":";;;;;;AACA,SACIA,kBADJ,EAEIC,iBAFJ,EAGIC,kBAHJ,QAIW,iCAJX;AAMA,SACIC,WADJ,QAEO,yBAFP;AAIA,SAASC,uBAAT,QAAwC,yBAAxC;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGC,YAAT,EAAuBC,MAAvB,KAAkC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,kBAAL;AACI,+BACOM,KADP;AAEII,QAAAA,UAAU,EAAE,IAFhB;AAGIC,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAKV,iBAAL;AACI,+BACOK,KADP;AAEII,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAHlB;;AAKJ,SAAKV,kBAAL;AACI,+BACOI,KADP;AAEIO,QAAAA,IAAI,EAAEL,MAAM,CAACI,OAFjB;AAGIF,QAAAA,UAAU,EAAE,KAHhB;AAIIC,QAAAA,KAAK,EAAE,IAJX;AAKIG,QAAAA,QAAQ,EAAC;AALb;;AAQJ,SAAKV,uBAAL;AACI,+BACOE,KADP;AAEIO,QAAAA,IAAI,oBACGP,KAAK,CAACO,IADT;AAEAE,UAAAA,aAAa,EAAC;AAFd;AAFR;;AAOJ,SAAKZ,WAAL;AACI,aAAO;AACHU,QAAAA,IAAI,EAAC;AACDG,UAAAA,EAAE,EAAE,IADH;AAEDC,UAAAA,KAAK,EAAE,EAFN;AAGDC,UAAAA,OAAO,EAAC,EAHP;AAIDH,UAAAA,aAAa,EAAC;AAJb,SADF;AAOHJ,QAAAA,KAAK,EAAC,IAPH;AAQHD,QAAAA,UAAU,EAAC,KARR;AASHI,QAAAA,QAAQ,EAAE;AATP,OAAP;;AAWJ;AACI,aAAOR,KAAP;AA3CR;AA6CH,CA9CM;AAgDP,MAAMC,YAAY,GAAG;AACjBM,EAAAA,IAAI,EAAC,EADY;AAEjBF,EAAAA,KAAK,EAAC,IAFW;AAGjBD,EAAAA,UAAU,EAAC;AAHM,CAArB","sourcesContent":["\nimport {\n    LOGIN_USER_LOADING,\n    LOGIN_USER_FAILED,\n    LOGIN_USER_SUCCESS, \n    } from \"../actions/LoginRegisterActions\";\n\nimport {\n    LOGOUT_USER\n} from \"../actions/LogoutAction\";\n\nimport { SEND_LINK_TOKEN_SUCCESS } from \"../actions/PlaidActions\"\n\nexport const reducer = (state = initialState, action) => {\n    switch(action.type){\n        case LOGIN_USER_LOADING:\n            return {\n                ...state,\n                isFetching: true,\n                error: null\n            };\n        case LOGIN_USER_FAILED:\n            return {\n                ...state,\n                isFetching: false,\n                error: action.payload\n            }\n        case LOGIN_USER_SUCCESS:\n            return {\n                ...state,\n                user: action.payload,\n                isFetching: false,\n                error: null,\n                navState:\"I am in show logout but\"\n\n            }\n        case SEND_LINK_TOKEN_SUCCESS:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    LinkedAccount:true\n                },\n            }\n        case LOGOUT_USER:\n            return {\n                user:{\n                    id: null,\n                    token: \"\",\n                    message:\"\",\n                    LinkedAccount:false\n                },\n                error:null,\n                isFetching:false,\n                navState: \"\"\n            }\n        default:\n            return state;\n    }\n}\n\nconst initialState = {\n    user:{},\n    error:null,\n    isFetching:false,\n};"]},"metadata":{},"sourceType":"module"}